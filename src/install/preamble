| core html smix petal xmi installer |core := #('Dandelion-utils.st''Dandelion-exceptions.st''Dandelion-event.st''Dandelion-introspector.st''Dandelion-analysis-storage.st''Dandelion-introspect-strategy.st''Dandelion-analysis-strategy.st''Dandelion-resolve-strategy.st''Dandelion-analyzable.st''Dandelion-outputter.st''Dandelion-facade.st').html := #('Dandelion-dynamic-document.st''Dandelion-dynDoc-html.st''Dandelion-outputter-html.st').smix := #('Dandelion-SMIX-element.st''Dandelion-outputter-SMIX.st').petal := #('Dandelion-ptl-utils.st''Dandelion-ptl-element.st''Dandelion-outputter-ptl.st').xmi := #('Dandelion-xmi-element.st''Dandelion-xmi-uml-element.st''Dandelion-outputter-xmi-uml.st').installer := [:files | files do:[:each | self fileInMemberNamed: each]].installer value: core.(self confirm: 'Do you install HTML output?')	ifTrue: [installer value: html].(self confirm: 'Do you install SMIX output?')	ifTrue: [installer value: smix].(self confirm: 'Do you install Petal output?')	ifTrue: [installer value: petal].(self confirm: 'Do you install XMI output?')	ifTrue: [installer value: xmi].DlDandelionSystem initialize.Smalltalk at: #FilePackageManager ifPresentAndInMemory: [ :fpm | fpm registerPackage: 'Dandelion' ].