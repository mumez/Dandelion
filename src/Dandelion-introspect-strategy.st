DlPropertyObject subclass: #DlIntrospectStrategy	instanceVariableNames: 'classIntrospector classCategoryIntrospector poolIntrospector changeSetIntrospector'	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-introspect-strategy'!!DlIntrospectStrategy commentStamp: '<historical>' prior: 0!I am an abstract class of IntrospectStrategy.I cache many introspectors for convenience.These introspectors are used in subclasses.#creator[:masashi | ^umezawa] #version 0.1!!DlIntrospectStrategy methodsFor: 'accessing' stamp: 'M.U 12/11/1999 16:42'!changeSetIntrospector		^changeSetIntrospector! !!DlIntrospectStrategy methodsFor: 'accessing' stamp: 'M.U 12/11/1999 16:42'!changeSetIntrospector: aValue	changeSetIntrospector := aValue! !!DlIntrospectStrategy methodsFor: 'accessing' stamp: 'M.U 11/5/1999 23:32'!classCategoryIntrospector	^classCategoryIntrospector! !!DlIntrospectStrategy methodsFor: 'accessing' stamp: 'M.U 11/5/1999 23:33'!classCategoryIntrospector: aValue	classCategoryIntrospector := aValue! !!DlIntrospectStrategy methodsFor: 'accessing' stamp: 'MU 3/30/1999 00:28'!classIntrospector	^classIntrospector! !!DlIntrospectStrategy methodsFor: 'accessing' stamp: 'MU 3/30/1999 00:28'!classIntrospector: aValue	classIntrospector := aValue! !!DlIntrospectStrategy methodsFor: 'accessing' stamp: 'M.U 4/29/1999 20:35'!poolIntrospector	^poolIntrospector! !!DlIntrospectStrategy methodsFor: 'accessing' stamp: 'M.U 4/29/1999 20:35'!poolIntrospector: aValue	poolIntrospector := aValue! !!DlIntrospectStrategy methodsFor: 'factory' stamp: 'M.U 12/5/1999 21:56'!defaultChangeSetIntrospectorClass	^DlChangeSetIntrospector	 ! !!DlIntrospectStrategy methodsFor: 'factory' stamp: 'M.U 11/5/1999 23:34'!defaultClassCategoryIntrospectorClass	^DlClassCategoryIntrospector! !!DlIntrospectStrategy methodsFor: 'factory' stamp: 'M.U. 9/18/1999 18:17'!defaultClassIntrospectorClass	^DlClassIntrospector! !!DlIntrospectStrategy methodsFor: 'factory' stamp: 'M.U. 9/18/1999 18:17'!defaultPoolIntrospectorClass	^DlPoolIntrospector! !!DlIntrospectStrategy methodsFor: 'caching' stamp: 'M.U 12/11/1999 16:44'!cacheChangeSetIntrospectorOn: aClass 	((self changeSetIntrospector isNil) or:[(self changeSetIntrospector target ~~ aClass)])		ifTrue: [self changeSetIntrospector: (self defaultChangeSetIntrospectorClass on: aClass)].	^ self changeSetIntrospector.! !!DlIntrospectStrategy methodsFor: 'caching' stamp: 'M.U 12/11/1999 16:43'!cacheClassCategoryIntrospectorOn: aClass 	((self classCategoryIntrospector isNil) or:[(self classCategoryIntrospector target ~~ aClass)])		ifTrue: [self classCategoryIntrospector: (self defaultClassCategoryIntrospectorClass on: aClass)].	^ self classCategoryIntrospector.! !!DlIntrospectStrategy methodsFor: 'caching' stamp: 'M.U. 9/24/1999 02:37'!cacheClassIntrospectorOn: aClass 	((self classIntrospector isNil) or:[(self classIntrospector target ~~ aClass)])		ifTrue: [self classIntrospector: (self defaultClassIntrospectorClass on: aClass)].	^ self classIntrospector.! !!DlIntrospectStrategy methodsFor: 'caching' stamp: 'M.U 11/28/1999 23:16'!cachePoolIntrospectorOn: aPool	((self poolIntrospector isNil) or:[(self poolIntrospector target ~~ aPool)])		ifTrue: [self poolIntrospector: (self defaultPoolIntrospectorClass on: aPool)].	^ self poolIntrospector.! !!DlIntrospectStrategy methodsFor: 'debugging' stamp: 'M.U. 9/24/1999 01:16'!printAnalyzable: aDlAnalyzable	Transcript cr; show: aDlAnalyzable printString! !