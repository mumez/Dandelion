DlXmlElement subclass: #DlSmixAnnotation	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixAnnotation commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: annotationCOMMENT: Implementation specific annotation for a Smalltalk program ANSI Smalltalk defines standard attribute key for usability. (category,comment,copyright,author). Additional attribute keys may be defined by SMIX implementations. **********************************************************************--><!!ELEMENT annotation  EMPTY  ><!!ATTLIST annotation key  CDATA   #REQUIRED value  CDATA   #REQUIRED >!!DlSmixAnnotation methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:06'!key	^self getAttributeNamed: 'key'! !!DlSmixAnnotation methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:07'!key: aKeyString 	self putAttributeNamed: 'key' value: aKeyString! !!DlSmixAnnotation methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:07'!value	^self getAttributeNamed: 'value'! !!DlSmixAnnotation methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:07'!value: aKeyString 	self putAttributeNamed: 'value' value: aKeyString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixAnnotation class	instanceVariableNames: ''!!DlSmixAnnotation class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 20:20'!key: aKeyStirng value: aValueString	^(self emptyNamed: 'annotation') key: aKeyStirng; value: aValueString! !DlXmlElement subclass: #DlSmixInterchangeUnitChild	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixInterchangeUnitChild commentStamp: '<historical>' prior: 0!I am an abstract SMIX element class. I am held by interchangeUnit.(No corrensponding SMIX DTD).<!!--**********************************************************************ELEMENT: interchangeUnitCOMMENT: Represents abstract interchangeable element.**********************************************************************--><!!ELEMENT interchangeUnit  ( %interchangeElement; , annotation* )  ><!!ENTITY % interchangeElement "( classDefinition |  classInitialization |  globalDefinition |  globalValueInitialization |  poolDefinition |  poolVariableDefinition |  poolValueInitialization |  methodDefinition |  classMethodDefinition |  programInitialization | comment )">!!DlSmixInterchangeUnitChild methodsFor: 'initialize-release' stamp: 'MU 6/11/2000 02:21'!initialize	super initialize.	parent := self createParentNamed: 'interchangeUnit'! !!DlSmixInterchangeUnitChild methodsFor: 'actions' stamp: 'MU 6/11/2000 01:04'!addAnnotation: aKeyString value: aValueString 	| interchangeNode anno |	interchangeNode := self parent.	anno := DlSmixAnnotation key: aKeyString value: aValueString.	interchangeNode addChild: anno.	^interchangeNode! !!DlSmixInterchangeUnitChild methodsFor: 'actions-standard annotations' stamp: 'MU 4/9/2000 01:13'!author: aString	^self addAnnotation: 'author' value: aString ! !!DlSmixInterchangeUnitChild methodsFor: 'actions-standard annotations' stamp: 'MU 4/9/2000 01:13'!category: aString	^self addAnnotation: 'category' value: aString ! !!DlSmixInterchangeUnitChild methodsFor: 'actions-standard annotations' stamp: 'MU 4/9/2000 01:13'!comment: aString	^self addAnnotation: 'comment' value: aString ! !!DlSmixInterchangeUnitChild methodsFor: 'actions-standard annotations' stamp: 'MU 4/9/2000 01:13'!copyright: aString	^self addAnnotation: 'copyright' value: aString ! !!DlSmixInterchangeUnitChild methodsFor: 'actions-extended annotations' stamp: 'MU 6/25/2000 01:24'!changeType: aString	^self addAnnotation: 'changeType' value: aString ! !!DlSmixInterchangeUnitChild methodsFor: 'actions-extended annotations' stamp: 'MU 4/9/2000 01:15'!timestamp: aString	^self addAnnotation: 'timestamp' value: aString ! !!DlSmixInterchangeUnitChild methodsFor: 'actions-extended annotations' stamp: 'MU 4/9/2000 01:14'!version: aString	^self addAnnotation: 'version' value: aString ! !DlSmixInterchangeUnitChild subclass: #DlSmixClassDefinition	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixClassDefinition commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: classDefinition**********************************************************************--><!!ELEMENT classDefinition  ( instVarNames?, classVarNames?, sharedPoolNames?,           classInstVarNames? )  ><!!ATTLIST classDefinition   className  CDATA   #REQUIRED  superclassName   CDATA   "Object"  indexedInstVarType  (byte | object | none)  "none" ><!!--**********************************************************************ELEMENT: instVarNamesCOMMENT: Instance variable names separated by space.**********************************************************************--><!!ELEMENT instVarNames  (#PCDATA)  ><!!--**********************************************************************ELEMENT: classVarNamesCOMMENT: Class variable names separated by space.**********************************************************************--><!!ELEMENT classVarNames  (#PCDATA)  ><!!--**********************************************************************ELEMENT: sharedPoolNamesCOMMENT: Pool names separated by space.**********************************************************************--><!!ELEMENT sharedPoolNames  (#PCDATA)  ><!!--**********************************************************************ELEMENT: classInstVarNamesCOMMENT: Class instance variable names separated by space.**********************************************************************--><!!ELEMENT classInstVarNames  (#PCDATA)  ><!!ENTITY % methodSpecifier " className  CDATA   #REQUIRED selector  CDATA   #REQUIRED">!!DlSmixClassDefinition methodsFor: 'actions' stamp: 'MU 4/8/2000 20:14'!classInstVarNames: aString	^self privAddChildNamed: 'classInstVarNames' content: aString! !!DlSmixClassDefinition methodsFor: 'actions' stamp: 'MU 4/8/2000 20:14'!classVarNames: aString	^self privAddChildNamed: 'classVarNames' content: aString! !!DlSmixClassDefinition methodsFor: 'actions' stamp: 'MU 4/8/2000 20:14'!instVarNames: aString	^self privAddChildNamed: 'instVarNames' content: aString! !!DlSmixClassDefinition methodsFor: 'actions' stamp: 'MU 4/9/2000 01:32'!sharedPoolNames: aString	^self privAddChildNamed: 'sharedPoolNames' content: aString! !!DlSmixClassDefinition methodsFor: 'attributes' stamp: 'MU 6/11/2000 00:08'!className	^self getAttributeNamed: 'className'! !!DlSmixClassDefinition methodsFor: 'attributes' stamp: 'MU 6/11/2000 00:08'!className: aString	self putAttributeNamed: 'className' value: aString! !!DlSmixClassDefinition methodsFor: 'attributes' stamp: 'MU 6/11/2000 00:09'!indexedInstVarType	^self getAttributeNamed: 'indexedInstVarType'! !!DlSmixClassDefinition methodsFor: 'attributes' stamp: 'MU 6/11/2000 00:08'!indexedInstVarType: aString	self putAttributeNamed: 'indexedInstVarType' value: aString! !!DlSmixClassDefinition methodsFor: 'attributes' stamp: 'MU 6/11/2000 00:09'!superclassName	^self getAttributeNamed: 'superclassName'! !!DlSmixClassDefinition methodsFor: 'attributes' stamp: 'MU 6/11/2000 00:08'!superclassName: aString	self putAttributeNamed: 'superclassName' value: aString! !!DlSmixClassDefinition methodsFor: 'private' stamp: 'MU 4/8/2000 20:16'!privAddChildNamed: aString content: aContentString	| child |	(self findChildNamed: aString) notNil ifTrue:[^nil].	child := self createChildNamed: aString.	child value: aContentString.	^ child! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixClassDefinition class	instanceVariableNames: ''!!DlSmixClassDefinition class methodsFor: 'instance creation' stamp: 'MU 4/8/2000 19:07'!class: aClass	^self className: (aClass name)	! !!DlSmixClassDefinition class methodsFor: 'instance creation' stamp: 'MU 6/11/2000 00:10'!className: aClassName	| inst |	inst := self named: 'classDefinition'.	inst className: aClassName.	^inst	! !!DlSmixClassDefinition class methodsFor: 'instance creation' stamp: 'MU 4/9/2000 01:30'!className: aClassName	superclassName: aSuperclassName	indexedInstVarType: indexedInstVarTypeSymbol	instanceVariableNames: instVarNames	classVariableNames: clsVarNames	sharedPoolNames: poolNames	classInstanceVariableNames: clsInstVarNames	| inst |	inst := self className: aClassName.	inst superclassName: aSuperclassName.	inst indexedInstVarType: indexedInstVarTypeSymbol.	inst instVarNames: instVarNames.	inst classVarNames: clsVarNames.	inst sharedPoolNames: poolNames.	inst classInstVarNames: clsInstVarNames.	^inst	! !!DlSmixClassDefinition class methodsFor: 'instance creation' stamp: 'MU 4/9/2000 01:29'!className: aClassName	superclassName: aSuperclassName	indexedInstVarType: indexedInstVarTypeSymbol	instanceVariableNames: instVarNames	classVariableNames: clsVarNames	sharedPoolNames: poolNames	classInstanceVariableNames: clsInstVarNames	category: aClassCategoryName	| inst |	inst := self className: aClassName	superclassName: aSuperclassName	indexedInstVarType: indexedInstVarTypeSymbol	instanceVariableNames: instVarNames	classVariableNames: clsVarNames	sharedPoolNames: poolNames	classInstanceVariableNames: clsInstVarNames.	inst category: aClassCategoryName.	^inst	! !DlSmixInterchangeUnitChild subclass: #DlSmixComment	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixComment commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: commentCOMMENT: Any Smalltalk comment.**********************************************************************--><!!ELEMENT comment  (#PCDATA)  >!!DlSmixComment methodsFor: 'content' stamp: 'MU 6/10/2000 20:44'!content	^self value! !!DlSmixComment methodsFor: 'content' stamp: 'MU 6/10/2000 20:43'!content: aString	self value: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixComment class	instanceVariableNames: ''!!DlSmixComment class methodsFor: 'instance creation' stamp: 'MU 4/10/2000 00:33'!content: aCommentString	| inst |	inst := self named: 'comment'.	inst value: aCommentString.	^inst! !DlSmixInterchangeUnitChild subclass: #DlSmixGlobalDefinition	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixGlobalDefinition commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: globalDefinition**********************************************************************--><!!ELEMENT globalDefinition  EMPTY  ><!!ATTLIST globalDefinition   globalName  CDATA   #REQUIRED isConstant  (true | false)  "false" >!!DlSmixGlobalDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:37'!globalName	^self getAttributeNamed: 'globalName'! !!DlSmixGlobalDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:38'!globalName: aString 	self putAttributeNamed: 'globalName' value: aString! !!DlSmixGlobalDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:38'!isConstant	^self getAttributeNamed: 'isConstant'! !!DlSmixGlobalDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:39'!isConstant: aBoolean 	self putAttributeNamed: 'isConstant' value: aBoolean! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixGlobalDefinition class	instanceVariableNames: ''!!DlSmixGlobalDefinition class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 23:44'!globalName: aGlobalName	^self globalName: aGlobalName isConstant: false! !!DlSmixGlobalDefinition class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 23:44'!globalName: aGlobalName isConstant: aBoolean	| inst |	inst := self emptyNamed: 'globalDefinition'.	inst globalName: aGlobalName.	inst isConstant: aBoolean.	^inst! !DlSmixInterchangeUnitChild subclass: #DlSmixInitialization	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixInitialization commentStamp: '<historical>' prior: 0!I am a abstract class for SMIX initializers (Class, Pool, Global, Program).(No corrensponding SMIX DTD).#creator[:masashi | ^umezawa] #version 0.1!!DlSmixInitialization methodsFor: 'content' stamp: 'MU 6/10/2000 20:47'!initializer	^self value! !!DlSmixInitialization methodsFor: 'content' stamp: 'MU 6/10/2000 20:47'!initializer: aString	self value: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixInitialization class	instanceVariableNames: ''!!DlSmixInitialization class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 20:49'!initializer: aCommentString	| inst |	inst := self new.	inst value: aCommentString.	^inst! !DlSmixInitialization subclass: #DlSmixClassInitialization	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixClassInitialization commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: classInitializationCOMMENT: Class initialization code.**********************************************************************--><!!ELEMENT classInitialization  (#PCDATA)  ><!!ATTLIST classInitialization   className  CDATA  #REQUIRED >!!DlSmixClassInitialization methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:40'!className	^self getAttributeNamed: 'className'! !!DlSmixClassInitialization methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:40'!className: aString 	self putAttributeNamed: 'className' value: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixClassInitialization class	instanceVariableNames: ''!!DlSmixClassInitialization class methodsFor: 'instance creation' stamp: 'MU 4/10/2000 00:08'!class: aClass	^self className: (aClass name)	! !!DlSmixClassInitialization class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 19:50'!className: aClassName	| inst |	inst := self named: 'classInitialization'.	inst putAttributeNamed: 'className' value: aClassName.	^inst	! !!DlSmixClassInitialization class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 20:34'!className: aClassName initializer: anInitializationCode	^(self className: aClassName) value: anInitializationCode	! !DlSmixInitialization subclass: #DlSmixGlobalValueInitialization	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixGlobalValueInitialization commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: globalValueInitialization**********************************************************************--><!!ELEMENT globalValueInitialization  (#PCDATA)  ><!!ATTLIST globalValueInitialization   globalName  CDATA   #REQUIRED >!!DlSmixGlobalValueInitialization methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:32'!globalName	^self getAttributeNamed: 'globalName'! !!DlSmixGlobalValueInitialization methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:41'!globalName: aString 	self putAttributeNamed: 'globalName' value: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixGlobalValueInitialization class	instanceVariableNames: ''!!DlSmixGlobalValueInitialization class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 20:56'!globalName: aGlobalName	| inst |	inst := self named: 'globalInitialization'.	inst globalName: aGlobalName.	^inst! !!DlSmixGlobalValueInitialization class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 20:56'!globalName: aGlobalName initializer: anInitializationCode	^(self globalName: aGlobalName) initializer: anInitializationCode	! !DlSmixInterchangeUnitChild subclass: #DlSmixMethodDefinition	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixMethodDefinition commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: methodDefinition**********************************************************************--><!!ELEMENT methodDefinition  (#PCDATA)  ><!!ATTLIST methodDefinition  %methodSpecifier; ><!!--**********************************************************************ELEMENT: classMethodDefinition**********************************************************************--><!!ELEMENT classMethodDefinition  (#PCDATA)  ><!!ATTLIST classMethodDefinition  %methodSpecifier; >!!DlSmixMethodDefinition methodsFor: 'actions' stamp: 'MU 6/10/2000 19:51'!className: aString	^self putAttributeNamed: 'className' value: aString! !!DlSmixMethodDefinition methodsFor: 'actions' stamp: 'MU 6/10/2000 19:51'!selector: aString	^self putAttributeNamed: 'selector' value: aString! !!DlSmixMethodDefinition methodsFor: 'actions' stamp: 'MU 4/10/2000 00:23'!source: aString	^self value: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixMethodDefinition class	instanceVariableNames: ''!!DlSmixMethodDefinition class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 23:46'!classMethod	^ (self named: 'classMethodDefinition')! !!DlSmixMethodDefinition class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 23:47'!classMethod: selector inClassNamed: clsName source: source	| inst |	inst := self classMethod.	inst selector: selector.	inst className: clsName.	inst source: source.	^inst! !!DlSmixMethodDefinition class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 23:47'!instMethod	^ (self named: 'methodDefinition')! !!DlSmixMethodDefinition class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 23:47'!instMethod: selector inClassNamed: clsName source: source	| inst |	inst := self instMethod.	inst selector: selector.	inst className: clsName.	inst source: source.	^inst! !DlSmixInterchangeUnitChild subclass: #DlSmixPoolDefinition	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixPoolDefinition commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: poolDefinition **********************************************************************--><!!ELEMENT poolDefinition  EMPTY  ><!!ATTLIST poolDefinition   poolName  CDATA   #REQUIRED >!!DlSmixPoolDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:34'!poolName	^self getAttributeNamed: 'poolName'! !!DlSmixPoolDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:34'!poolName: aString 	self putAttributeNamed: 'poolName' value: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixPoolDefinition class	instanceVariableNames: ''!!DlSmixPoolDefinition class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 23:35'!poolName: aPoolName	| inst |	inst := self emptyNamed: 'poolDefinition'.	inst poolName: aPoolName.	^inst	! !DlSmixInitialization subclass: #DlSmixPoolValueInitialization	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixPoolValueInitialization commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: poolValueInitialization**********************************************************************--><!!ELEMENT poolValueInitialization  (#PCDATA)  ><!!ATTLIST poolValueInitialization  %poolVariableSpecifier; ><!!ENTITY % poolVariableSpecifier " poolName  CDATA   #REQUIRED poolVariableName  CDATA   #REQUIRED">!!DlSmixPoolValueInitialization methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:54'!poolName	^self getAttributeNamed: 'poolName'! !!DlSmixPoolValueInitialization methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:54'!poolName: aString 	self putAttributeNamed: 'poolName' value: aString! !!DlSmixPoolValueInitialization methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:55'!poolVariableName	^self getAttributeNamed: 'poolVariableName'! !!DlSmixPoolValueInitialization methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:55'!poolVariableName: aString 	self putAttributeNamed: 'poolVariableName' value: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixPoolValueInitialization class	instanceVariableNames: ''!!DlSmixPoolValueInitialization class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 20:58'!poolName: aPoolName poolVariableName: aPoolVariableName initializer: anInitializationCode	| inst |	inst := self initializer: anInitializationCode.	inst name: 'poolValueInitialization'.	inst poolName: aPoolName.	inst poolVariableName: aPoolVariableName.	^inst	! !DlSmixInterchangeUnitChild subclass: #DlSmixPoolVariableDefinition	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixPoolVariableDefinition commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: poolVariableDefinition**********************************************************************--><!!ELEMENT poolVariableDefinition  EMPTY  ><!!ATTLIST poolVariableDefinition   %poolVariableSpecifier; isConstant  (true | false)  "false" ><!!ENTITY % poolVariableSpecifier " poolName  CDATA   #REQUIRED poolVariableName  CDATA   #REQUIRED">!!DlSmixPoolVariableDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:52'!isConstant	^self getAttributeNamed: 'isConstant'! !!DlSmixPoolVariableDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:52'!isConstant: aBoolean 	self putAttributeNamed: 'isConstant' value: aBoolean! !!DlSmixPoolVariableDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:50'!poolName	^self getAttributeNamed: 'poolName'! !!DlSmixPoolVariableDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:50'!poolName: aString 	self putAttributeNamed: 'poolName' value: aString! !!DlSmixPoolVariableDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:50'!poolVariableName	^self getAttributeNamed: 'poolVariableName'! !!DlSmixPoolVariableDefinition methodsFor: 'attributes' stamp: 'MU 6/10/2000 23:50'!poolVariableName: aString 	self putAttributeNamed: 'poolVariableName' value: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixPoolVariableDefinition class	instanceVariableNames: ''!!DlSmixPoolVariableDefinition class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 23:53'!poolName: aPoolName poolVariableName: aPoolVariableName	^self poolName: aPoolName poolVariableName: aPoolVariableName isConstant: false! !!DlSmixPoolVariableDefinition class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 23:53'!poolName: aPoolName poolVariableName: aPoolVariableName isConstant: aBoolean	| inst |	inst := self emptyNamed: 'poolVariableDefinition'.	inst poolName: aPoolName.	inst poolVariableName: aPoolVariableName.	inst isConstant: aBoolean.	^inst! !DlSmixInitialization subclass: #DlSmixProgramInitialization	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixProgramInitialization commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: programInitializationCOMMENT: Any Smalltalk code for initialization.**********************************************************************--><!!ELEMENT programInitialization  (#PCDATA)  >!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixProgramInitialization class	instanceVariableNames: ''!!DlSmixProgramInitialization class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 20:51'!initializer: aCommentString	| inst |	inst := self initializer: aCommentString.	inst name: 'programInitialization'.	^inst! !DlXmlElement subclass: #DlSmixRootElement	instanceVariableNames: 'currentInterchangeUnit'	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlSmixRootElement commentStamp: '<historical>' prior: 0!<!!--**********************************************************************ELEMENT: SMIXCOMMENT: The root element of SMIXATTRIBUTES: version - Specifies the version of SMIX.**********************************************************************--><!!ELEMENT SMIX  ( interchangeUnit+ )  ><!!ATTLIST SMIX  version  CDATA    "2.0" >!!DlSmixRootElement methodsFor: 'actions' stamp: 'MU 6/19/2000 00:41'!add: aDlSmixInterchangeUnitChild	aDlSmixInterchangeUnitChild isNil ifTrue:[^nil].	^self addInterchangeUnitChild: aDlSmixInterchangeUnitChild! !!DlSmixRootElement methodsFor: 'actions' stamp: 'MU 6/11/2000 01:44'!addAnnotation: aKeyString value: aValueString 	| child anno |	self currentInterchangeUnit isNil ifTrue:[^nil].	anno := DlSmixAnnotation key: aKeyString value: aValueString.	child := self currentInterchangeUnit addChild: anno.	^child! !!DlSmixRootElement methodsFor: 'actions' stamp: 'MU 6/10/2000 19:34'!addInterchangeUnitChild: aDlSmixInterchangeUnitChild	self currentInterchangeUnit: aDlSmixInterchangeUnitChild parent.	^self addChild: aDlSmixInterchangeUnitChild parent! !!DlSmixRootElement methodsFor: 'accessing' stamp: 'MU 6/10/2000 19:33'!currentInterchangeUnit	^currentInterchangeUnit! !!DlSmixRootElement methodsFor: 'accessing' stamp: 'MU 6/10/2000 19:33'!currentInterchangeUnit: aValue	currentInterchangeUnit := aValue! !!DlSmixRootElement methodsFor: 'attributes' stamp: 'MU 6/10/2000 20:06'!version	^self getAttributeNamed: 'version'! !!DlSmixRootElement methodsFor: 'attributes' stamp: 'MU 6/10/2000 19:52'!version: aVersionString 	self putAttributeNamed: 'version' value: aVersionString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlSmixRootElement class	instanceVariableNames: ''!!DlSmixRootElement class methodsFor: 'instance creation' stamp: 'MU 6/11/2000 02:11'!newRoot	^self newRoot: '2.0'! !!DlSmixRootElement class methodsFor: 'instance creation' stamp: 'MU 6/10/2000 19:26'!newRoot: anSmixVersionString 	^ (self named: 'SMIX') version: anSmixVersionString;	 yourself.! !Object subclass: #DlTinySmixSample	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-SMIX-element'!!DlTinySmixSample commentStamp: '<historical>' prior: 0!I am a tiny sample of SMIX generation.I just use SMIX-element objects for generation, not depending on any other Dandelion classes - so as to be highly portable!!	SMIX is intended to be a new Smalltalk Interchange Format.	It is basically based on the ANSI Smalltalk Interchange Format(ver1.0).	For further information, please see the site:		http://www.mars.dti.ne.jp/~umejava/smalltalk/smix/index.html #creator[:masashi | ^umezawa] #version 0.1!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlTinySmixSample class	instanceVariableNames: ''!!DlTinySmixSample class methodsFor: 'SMIX element creation' stamp: 'MU 6/11/2000 01:31'!classDefinitionOn: aClass 	| classDef |	classDef := DlSmixClassDefinition class: aClass.	classDef superclassName: aClass superclass name asString.	classDef indexedInstVarType: (aClass isVariable			ifTrue: [aClass isBytes					ifTrue: [#byte]					ifFalse: [#object]]			ifFalse: [#none]).	classDef instVarNames: (self nameStringFrom: aClass instVarNames).	classDef classVarNames: (self nameStringFrom: aClass classVarNames).	classDef sharedPoolNames: (self nameStringFrom: (aClass sharedPools collect: [:each | Smalltalk keyAtIdentityValue: each])).	classDef classInstVarNames: (self nameStringFrom: aClass class instVarNames).	classDef category: aClass category asString.	^ classDef.! !!DlTinySmixSample class methodsFor: 'SMIX element creation' stamp: 'MU 6/11/2000 00:41'!classMethodDefinitionNamed: aSelector in: aClass	| src methodDef |	src := aClass class sourceCodeAt: aSelector ifAbsent:[''].	methodDef := DlSmixMethodDefinition classMethod: aSelector inClassNamed: aClass name source: src.	methodDef category: (aClass class organization categoryOfElement: aSelector).	^methodDef	! !!DlTinySmixSample class methodsFor: 'SMIX element creation' stamp: 'MU 6/11/2000 00:41'!methodDefinitionNamed: aSelector in: aClass	| src methodDef |	src := aClass sourceCodeAt: aSelector ifAbsent:[''].	methodDef := DlSmixMethodDefinition instMethod: aSelector inClassNamed: aClass name source: src.	methodDef category: (aClass organization categoryOfElement: aSelector).	^methodDef	! !!DlTinySmixSample class methodsFor: 'writing SMIX element' stamp: 'MU 6/11/2000 01:35'!writeClassAndMethods: aClass on: aStream 	self writeClassDefinition: aClass on: aStream.	aClass selectors do: [:sele | self			writeMethodDefinition: sele			in: aClass			on: aStream].	aClass class selectors do: [:sele | self			writeClassMethodDefinition: sele			in: aClass			on: aStream].! !!DlTinySmixSample class methodsFor: 'writing SMIX element' stamp: 'MU 6/11/2000 01:07'!writeClassDefinition: aClass on: aStream	| classDef |	classDef := self classDefinitionOn: aClass.	classDef parent printXmlOn: aStream! !!DlTinySmixSample class methodsFor: 'writing SMIX element' stamp: 'MU 6/11/2000 01:09'!writeClassMethodDefinition: aSelector in: aClass on: aStream	| mDef |	mDef := self classMethodDefinitionNamed: aSelector in: aClass.	mDef parent printXmlOn: aStream.	! !!DlTinySmixSample class methodsFor: 'writing SMIX element' stamp: 'MU 6/11/2000 01:09'!writeMethodDefinition: aSelector in: aClass on: aStream	| mDef |	mDef := self methodDefinitionNamed: aSelector in: aClass.	mDef parent printXmlOn: aStream.	! !!DlTinySmixSample class methodsFor: 'stream creation' stamp: 'MU 6/11/2000 00:53'!fileStreamNamed: aString	^FileStream newFileNamed: aString! !!DlTinySmixSample class methodsFor: 'private' stamp: 'MU 6/11/2000 01:23'!nameStringFrom: aVariableCollection	| str |	str := WriteStream on: (String new: 64).	aVariableCollection collect:[:each | str nextPutAll: each asString; space].	^str contents! !!DlTinySmixSample class methodsFor: 'examples' stamp: 'MU 6/11/2000 02:05'!example1	"DlTinySmixSample example1"	| str root |	str := Transcript.	root := DlSmixRootElement newRoot.	root printXmlHeaderOn: str.	self writeClassAndMethods: DlXmlElement on: str.	root printXmlFooterOn: str.	str endEntry.! !!DlTinySmixSample class methodsFor: 'examples' stamp: 'MU 7/20/2000 23:05'!example2	"DlTinySmixSample example2"	| str root |	str := self fileStreamNamed: 'Text_SMIX.xml'.	root := DlSmixRootElement newRoot.	root printXmlHeaderOn: str.	self writeClassAndMethods: Text on: str.	root printXmlFooterOn: str.	str close.! !!DlTinySmixSample class methodsFor: 'examples' stamp: 'MU 7/20/2000 23:04'!example3	"DlTinySmixSample example3"	| str root |	str := self fileStreamNamed: 'CollectionSubclasses_SMIX.xml'.	root := DlSmixRootElement newRoot.	Collection subclasses do: 		[:cls | 		root add: (self classDefinitionOn: cls).		cls selectors do: [:sele | root add: (self methodDefinitionNamed: sele in: cls)].		cls class selectors do: [:csele | root add: (self classMethodDefinitionNamed: csele in: cls)]].	root printXmlOn: str.	str close.! !