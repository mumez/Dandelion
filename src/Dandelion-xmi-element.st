DlXmlElement subclass: #DlAbstractXmiElement	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-xmi-element'!!DlAbstractXmiElement commentStamp: 'mu 11/12/2004 23:36' prior: 0!I represent XMI 1.1 abstract tag.!!DlAbstractXmiElement methodsFor: 'initialize-release' stamp: 'mu 11/25/2004 00:56'!initialize	super initialize.	isPrintCData := false.! !!DlAbstractXmiElement methodsFor: 'printing' stamp: 'mu 11/17/2004 00:53'!privPrintAttribsOn: aStream	attribDict isNil ifTrue:[^self]. "ugly - but for performance"	self attribDict keysAndValuesDo:[ :k :v |		aStream nextPut: Character space.		self writeValue: k on: aStream.		aStream nextPutAll: '="'.		self writeValue: v asString on: aStream.		aStream nextPut: $".	]! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'MU 3/7/2002 18:47'!asRef	^(self class named: self name) xmiIdRef: (self xmiId)! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/25/2004 00:55'!createChildNamed: anElemName	| child |	child := self class newWithoutId name: anElemName.	child isPrintCData: false.	self addChild: child.	^child! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:16'!setXmiId	^self putAttributeNamed: 'xmi.id' value: DlXmiIdMaker default nextValue! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:16'!xmiId	^self getAttributeNamed: 'xmi.id' ifAbsent: [self setXmiId]! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:10'!xmiId: aValue	self putAttributeNamed: 'xmi.id' value: aValue! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:16'!xmiIdRef	^self getAttributeNamed: 'xmi.idref' ifAbsent: [nil]! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:10'!xmiIdRef: aValue	self putAttributeNamed: 'xmi.idref' value: aValue! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:16'!xmiName	^self getAttributeNamed: 'xmi.name' ifAbsent: [nil]! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:11'!xmiName: aValue	self putAttributeNamed: 'xmi.name' value: aValue! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:15'!xmiValue	^self getAttributeNamed: 'xmi.value' ifAbsent: [nil]! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:11'!xmiValue: aValue	self putAttributeNamed: 'xmi.value' value: aValue! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:15'!xmiVersion	^self getAttributeNamed: 'xmi.version' ifAbsent: [nil]! !!DlAbstractXmiElement methodsFor: 'actions' stamp: 'mu 11/10/2004 01:11'!xmiVersion: aValue	self putAttributeNamed: 'xmi.version' value: aValue! !!DlAbstractXmiElement methodsFor: 'constants' stamp: 'MU 3/6/2002 11:57'!xmiPrefix	^self class xmiPrefix! !!DlAbstractXmiElement methodsFor: 'constants' stamp: 'MU 3/6/2002 11:57'!xmiPrefixLowercase	^self class xmiPrefixLowercase! !!DlAbstractXmiElement methodsFor: 'accessing' stamp: 'MU 3/7/2002 15:02'!name	name isNil ifTrue: [name := self class tagName].	^name! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlAbstractXmiElement class	instanceVariableNames: 'tagName'!!DlAbstractXmiElement class methodsFor: 'constants' stamp: 'MU 3/7/2002 15:40'!defaultTagName	"override"	^'AbstractXmi'! !!DlAbstractXmiElement class methodsFor: 'constants' stamp: 'MU 3/6/2002 11:56'!xmiPrefix	^'XMI.'! !!DlAbstractXmiElement class methodsFor: 'constants' stamp: 'MU 3/6/2002 11:55'!xmiPrefixLowercase	^'xmi.'! !!DlAbstractXmiElement class methodsFor: 'class initialization' stamp: 'mu 11/13/2004 02:46'!initialize	"DlAbstractXmiElement initialize"	tagName := nil.	self subclasses do:[:each | each initialize]! !!DlAbstractXmiElement class methodsFor: 'accessing' stamp: 'MU 3/7/2002 15:38'!tagName		tagName isNil ifTrue: [tagName := self defaultTagName].	^tagName! !!DlAbstractXmiElement class methodsFor: 'accessing' stamp: 'MU 3/7/2002 15:38'!tagName: aString	tagName := aString! !!DlAbstractXmiElement class methodsFor: 'instance creation' stamp: 'MU 3/19/2002 13:47'!new	^self newWithoutId! !!DlAbstractXmiElement class methodsFor: 'instance creation' stamp: 'MU 3/19/2002 13:47'!newWithId	| inst |	inst := super new.	inst setXmiId.	^ inst! !!DlAbstractXmiElement class methodsFor: 'instance creation' stamp: 'MU 3/19/2002 13:47'!newWithoutId	| inst |	inst := super new.	^ inst! !DlAbstractXmiElement subclass: #DlXmiContent	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-xmi-element'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlXmiContent class	instanceVariableNames: ''!!DlXmiContent class methodsFor: 'constants' stamp: 'MU 3/7/2002 15:41'!defaultTagName	^self xmiPrefix, 'content'! !DlAbstractXmiElement subclass: #DlXmiDocumentation	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-xmi-element'!!DlXmiDocumentation methodsFor: 'actions' stamp: 'MU 3/7/2002 15:45'!exporter: exporter exporterVersion: exporterVersion	| exp expVer |	exp := self createChildNamed: 'XMI.exporter'.	exp value: exporter.		expVer := self createChildNamed: 'XMI.exporterVersion'.	expVer value: exporterVersion! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlXmiDocumentation class	instanceVariableNames: ''!!DlXmiDocumentation class methodsFor: 'constants' stamp: 'MU 3/7/2002 15:41'!defaultTagName	^self xmiPrefix, 'documentation'! !!DlXmiDocumentation class methodsFor: 'instance creation' stamp: 'MU 3/7/2002 15:49'!exporter: exporter exporterVersion: exporterVersion	^self new exporter: exporter exporterVersion: exporterVersion! !DlAbstractXmiElement subclass: #DlXmiHeader	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-xmi-element'!!DlXmiHeader methodsFor: 'elements' stamp: 'MU 3/7/2002 15:54'!addDocumentation	| doc |	doc := self addChild: (DlXmiDocumentation new).	^doc! !!DlXmiHeader methodsFor: 'actions' stamp: 'MU 3/18/2002 18:05'!exporter: exporter exporterVersion: exporterVersion	| doc |	doc := self addDocumentation.	doc exporter: exporter exporterVersion: exporterVersion.! !!DlXmiHeader methodsFor: 'actions' stamp: 'MU 3/15/2002 18:18'!metamodel: metamodel version: version	| mm |	mm := self addChild: (DlXmiMetamodel name: metamodel version: version).	^mm! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlXmiHeader class	instanceVariableNames: ''!!DlXmiHeader class methodsFor: 'constants' stamp: 'MU 3/7/2002 15:59'!defaultTagName	^self xmiPrefix, 'header'	! !Object subclass: #DlXmiIdMaker	instanceVariableNames: 'highValue lowValue highValueCounter'	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-xmi-element'!!DlXmiIdMaker methodsFor: 'initialize-release' stamp: 'MU 3/7/2002 17:23'!initialize	highValueCounter := 0.! !!DlXmiIdMaker methodsFor: 'actions' stamp: 'MU 3/7/2002 17:25'!nextValue	"MagicDraw like ID"	^'ID', self nextHighValue , self nextLowValue! !!DlXmiIdMaker methodsFor: 'private' stamp: 'mu 11/17/2004 01:49'!nextHighValue	self highValueCounter: self highValueCounter + 1.	self highValueCounter > 49		ifTrue: 			[self highValueCounter: 0.			self highValue: self privNextValue].	^ self highValue.! !!DlXmiIdMaker methodsFor: 'private' stamp: 'MU 3/7/2002 17:23'!nextLowValue	self lowValue: self privNextValue.	^ self lowValue.! !!DlXmiIdMaker methodsFor: 'private' stamp: 'MU 3/7/2002 17:23'!privNextValue	| sz str |	sz := 6.	str := String new: sz.	1 to: sz do:[ :idx |	str at: idx put: 15 atRandom asHexDigit]. 	^str		! !!DlXmiIdMaker methodsFor: 'accessing' stamp: 'MU 3/7/2002 17:23'!highValue	highValue isNil ifTrue:[ highValue := self privNextValue. ].	^highValue! !!DlXmiIdMaker methodsFor: 'accessing' stamp: 'MU 3/7/2002 17:23'!highValue: aValue	highValue := aValue! !!DlXmiIdMaker methodsFor: 'accessing' stamp: 'MU 3/7/2002 17:23'!highValueCounter	^highValueCounter! !!DlXmiIdMaker methodsFor: 'accessing' stamp: 'MU 3/7/2002 17:23'!highValueCounter: aValue	highValueCounter := aValue! !!DlXmiIdMaker methodsFor: 'accessing' stamp: 'MU 3/7/2002 17:23'!lowValue	lowValue isNil ifTrue:[ lowValue := self privNextValue. ].	^lowValue! !!DlXmiIdMaker methodsFor: 'accessing' stamp: 'MU 3/7/2002 17:23'!lowValue: aValue	lowValue := aValue! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlXmiIdMaker class	instanceVariableNames: ''!!DlXmiIdMaker class methodsFor: 'instance creation' stamp: 'MU 3/7/2002 17:23'!default	^ DlDefaultInstanceFactory default createInstanceOf: self! !!DlXmiIdMaker class methodsFor: 'instance creation' stamp: 'MU 3/7/2002 17:23'!new	^super new initialize! !DlAbstractXmiElement subclass: #DlXmiMetamodel	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-xmi-element'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlXmiMetamodel class	instanceVariableNames: ''!!DlXmiMetamodel class methodsFor: 'constants' stamp: 'MU 3/15/2002 18:14'!tagName	^self xmiPrefix, 'metamodel'! !!DlXmiMetamodel class methodsFor: 'instance creation' stamp: 'MU 3/15/2002 18:14'!name: metamodelName version: version	| inst |	inst := self new.	inst xmiName: metamodelName.	inst xmiVersion: version.	^inst! !DlAbstractXmiElement subclass: #DlXmiRootElement	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Dandelion-xmi-element'!!DlXmiRootElement methodsFor: 'initialize-release' stamp: 'mu 11/10/2004 01:14'!initialize	super initialize.	self initAsUML! !!DlXmiRootElement methodsFor: 'elements' stamp: 'MU 3/7/2002 15:56'!addContent	| cont |	cont := self addChild: DlXmiContent new.	^cont! !!DlXmiRootElement methodsFor: 'elements' stamp: 'MU 3/7/2002 15:56'!addHeader	| head |	head := self addChild: DlXmiHeader new.	^head! !!DlXmiRootElement methodsFor: 'elements' stamp: 'MU 3/18/2002 18:07'!content	^self findChildNamed: DlXmiContent tagName! !!DlXmiRootElement methodsFor: 'elements' stamp: 'MU 3/18/2002 18:09'!header	^self findChildNamed: DlXmiHeader tagName! !!DlXmiRootElement methodsFor: 'attributes' stamp: 'mu 11/18/2004 00:39'!timestamp	^self getAttributeNamed: 'timestamp' ifAbsentPut:[DateAndTime now asString]! !!DlXmiRootElement methodsFor: 'attributes' stamp: 'mu 11/12/2004 23:56'!timestamp: aString	^self putAttributeNamed: 'timestamp' value: aString! !!DlXmiRootElement methodsFor: 'attributes' stamp: 'mu 11/10/2004 01:14'!version	^self getAttributeNamed: 'xmi.version' ifAbsentPut:['1.2']! !!DlXmiRootElement methodsFor: 'attributes' stamp: 'mu 11/10/2004 01:13'!version: aString	^self putAttributeNamed: 'xmi.version' value: aString! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!DlXmiRootElement class	instanceVariableNames: ''!!DlXmiRootElement class methodsFor: 'instance creation' stamp: 'MU 3/7/2002 15:12'!newRoot: aVersionString 	^ (self new) version: aVersionString;	 yourself.! !!DlXmiRootElement class methodsFor: 'constants' stamp: 'MU 3/7/2002 15:25'!tagName	^'XMI'! !DlAbstractXmiElement initialize!